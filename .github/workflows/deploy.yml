name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> ./api/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> ./api/.env
          echo "ALGORITHM=HS256" >> ./api/.env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=60" >> ./api/.env
          echo "POSTGRES_HOST=db" >> ./api/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ./api/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ./api/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> ./api/.env
          echo "POSTGRES_PORT=5432" >> ./api/.env
          echo "DEV_MODE=False" >> ./api/.env
          echo "SEED_DATA=True" >> ./api/.env
          echo "DEFAULT_RESPONSE_LIMIT=20" >> ./api/.env
          echo "PYTHONUNBUFFERED=1" >> ./api/.env

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vinylflamingo-feeback-api:latest ./api
          docker push ${{ secrets.DOCKER_USERNAME }}/vinylflamingo-feeback-api:latest

      - name: Setup SSH key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.DIGITALOCEAN_SSH_KEY }}" | tr -d '\r' | cat > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa

      - name: Add DigitalOcean to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.DIGITALOCEAN_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        env:
          SSH_PRIVATE_KEY: ~/.ssh/id_rsa
        run: |
          scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./api/docker-compose.yml ./api/docker-compose.prod.yml ./api/.env ${{ secrets.DIGITALOCEAN_USER }}@${{ secrets.DIGITALOCEAN_HOST }}:/opt/vinylflamingo
          ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ${{ secrets.DIGITALOCEAN_USER }}@${{ secrets.DIGITALOCEAN_HOST }} "cd /opt/vinylflamingo && docker pull fcostoya/vinylflamingo-feeback-api:latest && docker-compose --env-file .env  -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans"
